{
	"artifacts" : 
	[
		{
			"path" : "autocomplete_api"
		}
	],
	"backtrace" : 1,
	"backtraceGraph" : 
	{
		"commands" : 
		[
			"add_executable",
			"target_link_libraries",
			"include_directories",
			"target_include_directories",
			"target_sources"
		],
		"files" : 
		[
			"CMakeLists.txt"
		],
		"nodes" : 
		[
			{
				"file" : 0
			},
			{
				"command" : 0,
				"file" : 0,
				"line" : 22,
				"parent" : 0
			},
			{
				"command" : 1,
				"file" : 0,
				"line" : 32,
				"parent" : 0
			},
			{
				"command" : 1,
				"file" : 0,
				"line" : 60,
				"parent" : 0
			},
			{
				"command" : 1,
				"file" : 0,
				"line" : 61,
				"parent" : 0
			},
			{
				"command" : 2,
				"file" : 0,
				"line" : 56,
				"parent" : 0
			},
			{
				"command" : 2,
				"file" : 0,
				"line" : 57,
				"parent" : 0
			},
			{
				"command" : 2,
				"file" : 0,
				"line" : 58,
				"parent" : 0
			},
			{
				"command" : 3,
				"file" : 0,
				"line" : 83,
				"parent" : 0
			},
			{
				"command" : 2,
				"file" : 0,
				"line" : 54,
				"parent" : 0
			},
			{
				"command" : 2,
				"file" : 0,
				"line" : 55,
				"parent" : 0
			},
			{
				"command" : 4,
				"file" : 0,
				"line" : 86,
				"parent" : 0
			}
		]
	},
	"compileGroups" : 
	[
		{
			"compileCommandFragments" : 
			[
				{
					"fragment" : "-g  "
				},
				{
					"fragment" : "-std=c++17"
				}
			],
			"includes" : 
			[
				{
					"backtrace" : 5,
					"path" : "/usr/local/include/libmongoc-1.0"
				},
				{
					"backtrace" : 6,
					"path" : "/usr/local/include/libbson-1.0"
				},
				{
					"backtrace" : 7,
					"path" : "/usr/local/lib"
				},
				{
					"backtrace" : 8,
					"path" : "/home/arthur/DEV/CPP/autocomplete_api"
				},
				{
					"backtrace" : 8,
					"path" : "/home/arthur/DEV/CPP/autocomplete_api/models"
				},
				{
					"backtrace" : 9,
					"isSystem" : true,
					"path" : "/usr/local/include/mongocxx/v_noabi"
				},
				{
					"backtrace" : 10,
					"isSystem" : true,
					"path" : "/usr/local/include/bsoncxx/v_noabi"
				},
				{
					"backtrace" : 2,
					"isSystem" : true,
					"path" : "/usr/include/jsoncpp"
				}
			],
			"language" : "CXX",
			"sourceIndexes" : 
			[
				0,
				1
			]
		}
	],
	"id" : "autocomplete_api::@6890427a1f51a3e7e1df",
	"link" : 
	{
		"commandFragments" : 
		[
			{
				"fragment" : "-g",
				"role" : "flags"
			},
			{
				"fragment" : "",
				"role" : "flags"
			},
			{
				"fragment" : "-Wl,-rpath,/usr/local/lib",
				"role" : "libraries"
			},
			{
				"backtrace" : 2,
				"fragment" : "/usr/local/lib/libdrogon.a",
				"role" : "libraries"
			},
			{
				"backtrace" : 3,
				"fragment" : "/usr/local/lib/libmongocxx.so.3.7.0",
				"role" : "libraries"
			},
			{
				"backtrace" : 4,
				"fragment" : "/usr/local/lib/libbsoncxx.so.3.7.0",
				"role" : "libraries"
			},
			{
				"fragment" : "/usr/local/lib/libtrantor.a",
				"role" : "libraries"
			},
			{
				"fragment" : "-lpthread",
				"role" : "libraries"
			},
			{
				"fragment" : "-lpthread",
				"role" : "libraries"
			},
			{
				"fragment" : "-ldl",
				"role" : "libraries"
			},
			{
				"fragment" : "/usr/lib/x86_64-linux-gnu/libjsoncpp.so",
				"role" : "libraries"
			},
			{
				"fragment" : "/usr/lib/x86_64-linux-gnu/libuuid.so",
				"role" : "libraries"
			},
			{
				"fragment" : "/usr/lib/x86_64-linux-gnu/libz.so",
				"role" : "libraries"
			},
			{
				"fragment" : "/usr/lib/x86_64-linux-gnu/libssl.so",
				"role" : "libraries"
			},
			{
				"fragment" : "/usr/lib/x86_64-linux-gnu/libcrypto.so",
				"role" : "libraries"
			}
		],
		"language" : "CXX"
	},
	"name" : "autocomplete_api",
	"nameOnDisk" : "autocomplete_api",
	"paths" : 
	{
		"build" : ".",
		"source" : "."
	},
	"sourceGroups" : 
	[
		{
			"name" : "Source Files",
			"sourceIndexes" : 
			[
				0,
				1
			]
		}
	],
	"sources" : 
	[
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "main.cc",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 11,
			"compileGroupIndex" : 0,
			"path" : "controllers/ApiController.cc",
			"sourceGroupIndex" : 0
		}
	],
	"type" : "EXECUTABLE"
}
